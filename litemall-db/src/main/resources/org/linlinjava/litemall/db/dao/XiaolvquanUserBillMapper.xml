<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.linlinjava.litemall.db.dao.XiaolvquanUserBillMapper">
  <resultMap id="BaseResultMap" type="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="promotion_actual_fee" jdbcType="DECIMAL" property="promotionActualFee" />
    <result column="recommend_actual_fee" jdbcType="DECIMAL" property="recommendActualFee" />
    <result column="promotion_estimate_fee" jdbcType="DECIMAL" property="promotionEstimateFee" />
    <result column="recommend_estimate_fee" jdbcType="DECIMAL" property="recommendEstimateFee" />
    <result column="rebate_estimate_fee" jdbcType="DECIMAL" property="rebateEstimateFee" />
    <result column="rebate_actual_fee" jdbcType="DECIMAL" property="rebateActualFee" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="month" jdbcType="VARCHAR" property="month" />
    <result column="add_banlance" jdbcType="TINYINT" property="addBanlance" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, promotion_actual_fee, recommend_actual_fee, status, month, updateTime,add_banlance,rebate_estimate_fee,rebate_actual_fee
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from xiaolvquan_user_bill_month
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from xiaolvquan_user_bill_month
    where user_id = #{userId,jdbcType=INTEGER}
    <if test="status != 0">
      AND status = #{status,jdbcType=INTEGER}
    </if>
    <if test="month != null">
      AND month = #{month,jdbcType=VARCHAR}
    </if>
    group by month
    limit #{offset,jdbcType=INTEGER},#{pageNum,jdbcType=INTEGER}
  </select>
  <select id="selectSumByUserId" parameterType="java.lang.Integer" resultType="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    select
    sum(promotion_actual_fee) as promotionActualFee,
    sum(recommend_actual_fee) as recommendActualFee,
    sum(promotion_estimate_fee) as promotionEstimateFee,
    sum(recommend_estimate_fee) as recommendEstimateFee,
    sum(rebate_estimate_fee) as rebateEstimateFee,
    sum(rebate_actual_fee) as rebateActualFee
    from xiaolvquan_user_bill_month
    where user_id = #{userId,jdbcType=INTEGER}
    <if test="status != 0">
      AND status = #{status,jdbcType=INTEGER}
    </if>
    <if test="month != null">
      AND month = #{month,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from xiaolvquan_user_bill_month
    where id = #{id,jdbcType=INTEGER}

  </delete>
  <insert id="insert" parameterType="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    insert into xiaolvquan_user_bill_month (id, user_id, promotion_actual_fee, 
      recommend_actual_fee, status, month, 
      updateTime,rebate_estimate_fee,rebate_actual_fee)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{promotionActualFee,jdbcType=DECIMAL}, 
      #{recommendActualFee,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{month,jdbcType=VARCHAR}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{rebateEstimateFee,jdbcType=DECIMAL}, #{rebateActualFee,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    insert into xiaolvquan_user_bill_month
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="promotionActualFee != null">
        promotion_actual_fee,
      </if>
      <if test="recommendActualFee != null">
        recommend_actual_fee,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="promotionActualFee != null">
        #{promotionActualFee,jdbcType=DECIMAL},
      </if>
      <if test="recommendActualFee != null">
        #{recommendActualFee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="month != null">
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    update xiaolvquan_user_bill_month
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="promotionActualFee != null">
        promotion_actual_fee = #{promotionActualFee,jdbcType=DECIMAL},
      </if>
      <if test="recommendActualFee != null">
        recommend_actual_fee = #{recommendActualFee,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="month != null">
        month = #{month,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.linlinjava.litemall.db.domain.XiaolvquanUserBill">
    update xiaolvquan_user_bill_month
    set user_id = #{userId,jdbcType=INTEGER},
      promotion_actual_fee = #{promotionActualFee,jdbcType=DECIMAL},
      recommend_actual_fee = #{recommendActualFee,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      month = #{month,jdbcType=VARCHAR},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>